## KIE Databases BEGIN
databases:
  ## RANGE BEGINS
  #[[ range $index, $Map := .Databases ]]
  - deploymentConfigs:
      ## PostgreSQL deployment config BEGIN
      - metadata:
          name: "[[.ServerName]]-postgresql"
          labels:
            app: "[[$.ApplicationName]]"
            application: "[[$.ApplicationName]]"
            service: "[[.ServerName]]-postgresql"
        spec:
          strategy:
            type: Recreate
          triggers:
            - type: ConfigChange
          replicas: 1
          selector:
            deploymentConfig: "[[.ServerName]]-postgresql"
          template:
            metadata:
              name: "[[.ServerName]]-postgresql"
              labels:
                deploymentConfig: "[[.ServerName]]-postgresql"
                app: "[[$.ApplicationName]]"
                application: "[[$.ApplicationName]]"
                service: "[[.ServerName]]-postgresql"
            spec:
              containers:
                - name: "[[.ServerName]]-postgresql"
                  image: "[[$.Constants.PostgreSQLImageURL]]"
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    exec:
                      command:
                        - "/usr/libexec/check-container"
                        - "--live"
                    initialDelaySeconds: 120
                    timeoutSeconds: 10
                  readinessProbe:
                    exec:
                      command:
                        - "/usr/libexec/check-container"
                    initialDelaySeconds: 5
                    timeoutSeconds: 1
                  ports:
                    - containerPort: 5432
                      protocol: TCP
                  env:
                    - name: POSTGRESQL_USER
                      value: "[[.Username]]"
                    - name: POSTGRESQL_PASSWORD
                      value: "[[$.DBPassword]]"
                    - name: POSTGRESQL_DATABASE
                      value: "[[.DatabaseName]]"
                    - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
                      value: "100"
                  volumeMounts:
                    - mountPath: "/var/lib/pgsql/data"
                      name: "[[.ServerName]]-postgresql-[[$.Constants.DatabaseVolumeSuffix]]"
              ## [[ if ne .Size "" ]]
              volumes:
                - name: "[[.ServerName]]-postgresql-[[$.Constants.DatabaseVolumeSuffix]]"
                  persistentVolumeClaim:
                    claimName: "[[.ServerName]]-postgresql-claim"
    ## PostgreSQL deployment config END
    ## PostgreSQL persistent volume claim BEGIN
    persistentVolumeClaims:
      - metadata:
          name: "[[.ServerName]]-postgresql-claim"
          labels:
            app: "[[$.ApplicationName]]"
            application: "[[$.ApplicationName]]"
            service: "[[.ServerName]]-postgresql"
        spec:
          # [[ if ne .StorageClassName "" ]]
          storageClassName: "[[.StorageClassName]]"
          # [[ end ]]
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: "[[.Size]]"
              ## PostgreSQL persistent volume claim END
              ## [[ else ]]
              volumes:
                - name: "[[.ServerName]]-postgresql-[[$.Constants.DatabaseVolumeSuffix]]"
                  emptyDir: {}
    ## [[ end ]]
    services:
      ## PostgreSQL service BEGIN
      - metadata:
          annotations:
            description: The database server's port.
          labels:
            application: prod
            service: "[[.ServerName]]-postgresql"
          name: "[[.ServerName]]-postgresql"
        spec:
          ports:
            - port: 5432
              targetPort: 5432
          selector:
            deploymentConfig: "[[.ServerName]]-postgresql"
    ## PostgreSQL service END
  #[[end]]
  ## RANGE ends
## KIE Databases END
